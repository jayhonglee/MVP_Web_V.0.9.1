/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ProfileImport } from './routes/profile'
import { Route as LoginImport } from './routes/login'
import { Route as DropinImport } from './routes/dropin'
import { Route as CreateDropinImport } from './routes/createDropin'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as ProfileSettingsImport } from './routes/profile/settings'
import { Route as ProfileLogoutImport } from './routes/profile/logout'
import { Route as ProfileGroupChatImport } from './routes/profile/group-chat'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DropinRoute = DropinImport.update({
  id: '/dropin',
  path: '/dropin',
  getParentRoute: () => rootRoute,
} as any)

const CreateDropinRoute = CreateDropinImport.update({
  id: '/createDropin',
  path: '/createDropin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileSettingsRoute = ProfileSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileLogoutRoute = ProfileLogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileGroupChatRoute = ProfileGroupChatImport.update({
  id: '/group-chat',
  path: '/group-chat',
  getParentRoute: () => ProfileRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/createDropin': {
      id: '/createDropin'
      path: '/createDropin'
      fullPath: '/createDropin'
      preLoaderRoute: typeof CreateDropinImport
      parentRoute: typeof rootRoute
    }
    '/dropin': {
      id: '/dropin'
      path: '/dropin'
      fullPath: '/dropin'
      preLoaderRoute: typeof DropinImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/profile/group-chat': {
      id: '/profile/group-chat'
      path: '/group-chat'
      fullPath: '/profile/group-chat'
      preLoaderRoute: typeof ProfileGroupChatImport
      parentRoute: typeof ProfileImport
    }
    '/profile/logout': {
      id: '/profile/logout'
      path: '/logout'
      fullPath: '/profile/logout'
      preLoaderRoute: typeof ProfileLogoutImport
      parentRoute: typeof ProfileImport
    }
    '/profile/settings': {
      id: '/profile/settings'
      path: '/settings'
      fullPath: '/profile/settings'
      preLoaderRoute: typeof ProfileSettingsImport
      parentRoute: typeof ProfileImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof ProfileImport
    }
  }
}

// Create and export the route tree

interface ProfileRouteChildren {
  ProfileGroupChatRoute: typeof ProfileGroupChatRoute
  ProfileLogoutRoute: typeof ProfileLogoutRoute
  ProfileSettingsRoute: typeof ProfileSettingsRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
}

const ProfileRouteChildren: ProfileRouteChildren = {
  ProfileGroupChatRoute: ProfileGroupChatRoute,
  ProfileLogoutRoute: ProfileLogoutRoute,
  ProfileSettingsRoute: ProfileSettingsRoute,
  ProfileIndexRoute: ProfileIndexRoute,
}

const ProfileRouteWithChildren =
  ProfileRoute._addFileChildren(ProfileRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/createDropin': typeof CreateDropinRoute
  '/dropin': typeof DropinRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRouteWithChildren
  '/signup': typeof SignupRoute
  '/profile/group-chat': typeof ProfileGroupChatRoute
  '/profile/logout': typeof ProfileLogoutRoute
  '/profile/settings': typeof ProfileSettingsRoute
  '/profile/': typeof ProfileIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/createDropin': typeof CreateDropinRoute
  '/dropin': typeof DropinRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/profile/group-chat': typeof ProfileGroupChatRoute
  '/profile/logout': typeof ProfileLogoutRoute
  '/profile/settings': typeof ProfileSettingsRoute
  '/profile': typeof ProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/createDropin': typeof CreateDropinRoute
  '/dropin': typeof DropinRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRouteWithChildren
  '/signup': typeof SignupRoute
  '/profile/group-chat': typeof ProfileGroupChatRoute
  '/profile/logout': typeof ProfileLogoutRoute
  '/profile/settings': typeof ProfileSettingsRoute
  '/profile/': typeof ProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/createDropin'
    | '/dropin'
    | '/login'
    | '/profile'
    | '/signup'
    | '/profile/group-chat'
    | '/profile/logout'
    | '/profile/settings'
    | '/profile/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/createDropin'
    | '/dropin'
    | '/login'
    | '/signup'
    | '/profile/group-chat'
    | '/profile/logout'
    | '/profile/settings'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/createDropin'
    | '/dropin'
    | '/login'
    | '/profile'
    | '/signup'
    | '/profile/group-chat'
    | '/profile/logout'
    | '/profile/settings'
    | '/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateDropinRoute: typeof CreateDropinRoute
  DropinRoute: typeof DropinRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRouteWithChildren
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateDropinRoute: CreateDropinRoute,
  DropinRoute: DropinRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRouteWithChildren,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/createDropin",
        "/dropin",
        "/login",
        "/profile",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/createDropin": {
      "filePath": "createDropin.tsx"
    },
    "/dropin": {
      "filePath": "dropin.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx",
      "children": [
        "/profile/group-chat",
        "/profile/logout",
        "/profile/settings",
        "/profile/"
      ]
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/profile/group-chat": {
      "filePath": "profile/group-chat.tsx",
      "parent": "/profile"
    },
    "/profile/logout": {
      "filePath": "profile/logout.tsx",
      "parent": "/profile"
    },
    "/profile/settings": {
      "filePath": "profile/settings.tsx",
      "parent": "/profile"
    },
    "/profile/": {
      "filePath": "profile/index.tsx",
      "parent": "/profile"
    }
  }
}
ROUTE_MANIFEST_END */
